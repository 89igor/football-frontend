{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../pipes/sort.pipe\";\n\nfunction SelectLeagueComponent_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1, \"All\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SelectLeagueComponent_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const league_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", league_r2.leagueId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", league_r2.leagueName, \" \");\n  }\n}\n\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\n\nvar defaultLeague = /*#__PURE__*/(() => {\n  (function (defaultLeague) {\n    defaultLeague[\"All\"] = \"All\";\n  })(defaultLeague || (defaultLeague = {}));\n\n  return defaultLeague;\n})();\nexport let SelectLeagueComponent = /*#__PURE__*/(() => {\n  class SelectLeagueComponent {\n    constructor() {\n      this.leagues = [];\n      this.selectedLeague = new EventEmitter();\n    }\n\n    change() {\n      if (/^\\d+$/.test(this.curLeague)) {\n        this.selectedLeague.emit(Number(this.curLeague));\n      } else {\n        this.selectedLeague.emit(this.curLeague);\n      }\n    }\n\n    ngOnChanges() {\n      this.allSelected ? this.curLeague = defaultLeague.All : this.curLeague;\n    }\n\n    ngOnInit() {\n      if (this.allSelected) {\n        this.selectedLeague.emit(undefined);\n      }\n    }\n\n  }\n\n  SelectLeagueComponent.ɵfac = function SelectLeagueComponent_Factory(t) {\n    return new (t || SelectLeagueComponent)();\n  };\n\n  SelectLeagueComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectLeagueComponent,\n    selectors: [[\"app-select-league\"]],\n    inputs: {\n      leagues: \"leagues\",\n      curLeague: \"curLeague\",\n      allSelected: \"allSelected\"\n    },\n    outputs: {\n      selectedLeague: \"selectedLeague\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 8,\n    consts: [[1, \"select\", \"select-league\", 3, \"ngModel\", \"ngModelOptions\", \"change\", \"ngModelChange\"], [4, \"ngIf\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function SelectLeagueComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"select\", 0);\n        i0.ɵɵlistener(\"change\", function SelectLeagueComponent_Template_select_change_0_listener() {\n          return ctx.change();\n        })(\"ngModelChange\", function SelectLeagueComponent_Template_select_ngModelChange_0_listener($event) {\n          return ctx.curLeague = $event;\n        });\n        i0.ɵɵtemplate(1, SelectLeagueComponent_option_1_Template, 2, 0, \"option\", 1);\n        i0.ɵɵtemplate(2, SelectLeagueComponent_option_2_Template, 2, 2, \"option\", 2);\n        i0.ɵɵpipe(3, \"sort\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.curLeague)(\"ngModelOptions\", i0.ɵɵpureFunction0(7, _c0));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.allSelected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(3, 4, ctx.leagues, \"leagueName\"));\n      }\n    },\n    directives: [i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgModel, i2.NgIf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i2.NgForOf],\n    pipes: [i3.SortPipe],\n    styles: [\"\"]\n  });\n  return SelectLeagueComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}