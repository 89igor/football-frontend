{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../pipes/sort.pipe\";\n\nfunction SelectRangeComponent_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 3);\n    i0.ɵɵtext(1, \"All\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SelectRangeComponent_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const season_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", season_r2.seasonId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", season_r2.seasonName, \" \");\n  }\n}\n\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\n\nvar defaultSeason = /*#__PURE__*/(() => {\n  (function (defaultSeason) {\n    defaultSeason[\"All\"] = \"All\";\n  })(defaultSeason || (defaultSeason = {}));\n\n  return defaultSeason;\n})();\nexport let SelectRangeComponent = /*#__PURE__*/(() => {\n  class SelectRangeComponent {\n    constructor() {\n      this.seasons = [];\n      this.selectedSeason = new EventEmitter();\n    }\n\n    change() {\n      if (/^\\d+$/.test(this.curSeason)) {\n        this.selectedSeason.emit(Number(this.curSeason));\n      } else {\n        this.selectedSeason.emit(this.curSeason);\n      }\n    }\n\n    ngOnChanges() {\n      this.allSelected ? this.curSeason = defaultSeason.All : this.curSeason;\n    }\n\n    initialize() {\n      if (this.allSelected) {\n        this.selectedSeason.emit(undefined);\n      }\n    }\n\n    ngOnInit() {\n      this.initialize();\n    }\n\n  }\n\n  SelectRangeComponent.ɵfac = function SelectRangeComponent_Factory(t) {\n    return new (t || SelectRangeComponent)();\n  };\n\n  SelectRangeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectRangeComponent,\n    selectors: [[\"app-select-range\"]],\n    inputs: {\n      seasons: \"seasons\",\n      curSeason: \"curSeason\",\n      allSelected: \"allSelected\"\n    },\n    outputs: {\n      selectedSeason: \"selectedSeason\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 8,\n    consts: [[1, \"select\", \"select-range\", 3, \"ngModel\", \"ngModelOptions\", \"change\", \"ngModelChange\"], [\"value\", \"All\", 4, \"ngIf\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"All\"], [3, \"value\"]],\n    template: function SelectRangeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"select\", 0);\n        i0.ɵɵlistener(\"change\", function SelectRangeComponent_Template_select_change_0_listener() {\n          return ctx.change();\n        })(\"ngModelChange\", function SelectRangeComponent_Template_select_ngModelChange_0_listener($event) {\n          return ctx.curSeason = $event;\n        });\n        i0.ɵɵtemplate(1, SelectRangeComponent_option_1_Template, 2, 0, \"option\", 1);\n        i0.ɵɵtemplate(2, SelectRangeComponent_option_2_Template, 2, 2, \"option\", 2);\n        i0.ɵɵpipe(3, \"sort\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.curSeason)(\"ngModelOptions\", i0.ɵɵpureFunction0(7, _c0));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.allSelected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(3, 4, ctx.seasons, \"seasonName\"));\n      }\n    },\n    directives: [i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgModel, i2.NgIf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i2.NgForOf],\n    pipes: [i3.SortPipe],\n    styles: [\"\"]\n  });\n  return SelectRangeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}