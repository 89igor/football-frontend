{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../shared/services/h2h.service\";\nimport * as i2 from \"../../../shared/services/leagueAndSeasons.service\";\nimport * as i3 from \"../../../shared/services/team.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../../shared/components/header-component/header-component.component\";\n\nfunction TopPlayersComparisonComponent_app_header_component_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-header-component\", 2);\n    i0.ɵɵlistener(\"selectedSeason\", function TopPlayersComparisonComponent_app_header_component_0_Template_app_header_component_selectedSeason_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.selectSeason($event);\n    })(\"selectedLeague\", function TopPlayersComparisonComponent_app_header_component_0_Template_app_header_component_selectedLeague_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.selectLeague($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", (ctx_r0.firstTeam == null ? null : ctx_r0.firstTeam.name) + \" \" + \"VS\" + \" \" + (ctx_r0.secondTeam == null ? null : ctx_r0.secondTeam.name) + \" \" + \"Comparision\")(\"hasSelectLeague\", false)(\"hasSelectRange\", true)(\"seasons\", ctx_r0.seasons)(\"leagues\", ctx_r0.leagues)(\"curSeason\", ctx_r0.curSeason)(\"curLeague\", ctx_r0.curLeague);\n  }\n}\n\nfunction TopPlayersComparisonComponent_div_1_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 7);\n    i0.ɵɵlistener(\"click\", function TopPlayersComparisonComponent_div_1_tr_11_Template_td_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const item_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.navigateToPlayerProfile(item_r6.home);\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 7);\n    i0.ɵɵlistener(\"click\", function TopPlayersComparisonComponent_div_1_tr_11_Template_td_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const item_r6 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.navigateToPlayerProfile(item_r6.away);\n    });\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r6.performance);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r6.home, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r6.away, \" \");\n  }\n}\n\nfunction TopPlayersComparisonComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"table\", 4)(2, \"thead\")(3, \"tr\")(4, \"td\", 5);\n    i0.ɵɵtext(5, \"Performance Summary\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 5);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\", 5);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"tbody\");\n    i0.ɵɵtemplate(11, TopPlayersComparisonComponent_div_1_tr_11_Template, 7, 3, \"tr\", 6);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r1.firstTeam == null ? null : ctx_r1.firstTeam.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.secondTeam == null ? null : ctx_r1.secondTeam.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.list);\n  }\n}\n\nexport let TopPlayersComparisonComponent = /*#__PURE__*/(() => {\n  class TopPlayersComparisonComponent {\n    constructor(_h2hService, _leagueAndSeasonsService, _teamService, router) {\n      this._h2hService = _h2hService;\n      this._leagueAndSeasonsService = _leagueAndSeasonsService;\n      this._teamService = _teamService;\n      this.router = router;\n      this.list = [];\n      this.seasons = [];\n      this.leagues = [];\n    }\n\n    selectSeason(id) {\n      this.curSeason = id;\n      this.teamPlayersComparision();\n    }\n\n    ngOnInit() {\n      forkJoin([this._leagueAndSeasonsService.getLeagueAndSeasons(this.firstTeamId), this._leagueAndSeasonsService.getLeagueAndSeasons(this.secondTeamId), this._teamService.getSecondaryInfo(this.firstTeamId), this._teamService.getSecondaryInfo(this.secondTeamId)]).subscribe(res => {\n        var _a;\n\n        const arr = res[0].concat(res[1]);\n        const leagueSeasons = arr.reduce((acc, current) => {\n          const x = acc.find(item => item.leagueId === current.leagueId);\n\n          if (!x) {\n            return acc.concat([current]);\n          } else {\n            return acc;\n          }\n        }, []);\n\n        this._teamService.leagueSeasons.next(leagueSeasons);\n\n        this.curLeague = (_a = leagueSeasons[0]) === null || _a === void 0 ? void 0 : _a.leagueId;\n        this.firstTeam = res[2];\n        this.secondTeam = res[3];\n        this.getLeagues();\n      });\n    }\n\n    getLeagues() {\n      this._teamService.leagueSeasons.pipe().subscribe(res => {\n        this.leagues = res;\n        this.getSeasons();\n      });\n    }\n\n    selectLeague(id) {\n      this.curSeason = undefined;\n      this.curLeague = id;\n      this.getSeasons();\n    }\n\n    getSeasons() {\n      var _a;\n\n      const l = (_a = this.leagues) === null || _a === void 0 ? void 0 : _a.find(l => l.leagueId === this.curLeague);\n\n      if (!this.curSeason) {\n        this.curSeason = l === null || l === void 0 ? void 0 : l.seasons[0].seasonId;\n      }\n\n      this.seasons = (l === null || l === void 0 ? void 0 : l.seasons) || [];\n      this.teamPlayersComparision();\n    }\n\n    teamPlayersComparision() {\n      forkJoin([this._h2hService.teamData(this.firstTeamId, this.curSeason), this._h2hService.teamData(this.secondTeamId, this.curSeason)]).subscribe(res => {\n        this.firstTeamData = res[0];\n        this.secondTeamData = res[1];\n        const maxScore_f = Math.max(...this.firstTeamData.map(obj => obj.goals));\n        const topScorerFirst = this.firstTeamData.find(d => d.goals === maxScore_f);\n        const maxScore_s = Math.max(...this.secondTeamData.map(obj => obj.goals));\n        const topScorerSecond = this.secondTeamData.find(d => d.goals === maxScore_s);\n        const maxAssist_f = Math.max(...this.firstTeamData.map(obj => obj.assists));\n        const maxAssist_s = Math.max(...this.secondTeamData.map(obj => obj.assists));\n        const assistsFirst = this.firstTeamData.find(d => d.assists === maxAssist_f);\n        const assistsSecond = this.secondTeamData.find(d => d.assists === maxAssist_s);\n        const appearences_f = Math.max(...this.firstTeamData.map(obj => obj.appearences));\n        const appearences_s = Math.max(...this.secondTeamData.map(obj => obj.appearences));\n        const appearencesFirst = this.firstTeamData.find(d => d.appearences === appearences_f);\n        const appearencesSecond = this.secondTeamData.find(d => d.appearences === appearences_s);\n        const mins_f = Math.max(...this.firstTeamData.map(obj => obj.minutes));\n        const mins_s = Math.max(...this.secondTeamData.map(obj => obj.minutes));\n        const minFirst = this.firstTeamData.find(d => d.minutes === mins_f);\n        const minSecond = this.secondTeamData.find(d => d.minutes === mins_s);\n        const cards_f = Math.max(...this.firstTeamData.map(obj => obj.yellowcards));\n        const cards_s = Math.max(...this.secondTeamData.map(obj => obj.yellowcards));\n        const cardsFirst = this.firstTeamData.find(d => d.yellowcards === cards_f);\n        const cardsSecond = this.secondTeamData.find(d => d.yellowcards === cards_s);\n        this.list = [{\n          performance: 'Top Scorer',\n          home: topScorerFirst ? `${topScorerFirst === null || topScorerFirst === void 0 ? void 0 : topScorerFirst.player.data.display_name} (${topScorerFirst === null || topScorerFirst === void 0 ? void 0 : topScorerFirst.goals})` : '',\n          away: topScorerSecond ? `${topScorerSecond === null || topScorerSecond === void 0 ? void 0 : topScorerSecond.player.data.display_name} (${topScorerSecond === null || topScorerSecond === void 0 ? void 0 : topScorerSecond.goals})` : ''\n        }, {\n          performance: 'Top Assists',\n          home: assistsFirst ? `${assistsFirst === null || assistsFirst === void 0 ? void 0 : assistsFirst.player.data.display_name} (${assistsFirst === null || assistsFirst === void 0 ? void 0 : assistsFirst.assists})` : '',\n          away: assistsSecond ? `${assistsSecond === null || assistsSecond === void 0 ? void 0 : assistsSecond.player.data.display_name} (${assistsSecond === null || assistsSecond === void 0 ? void 0 : assistsSecond.assists})` : ''\n        }, {\n          performance: 'Most Appearances',\n          home: appearencesFirst ? `${appearencesFirst === null || appearencesFirst === void 0 ? void 0 : appearencesFirst.player.data.display_name} (${appearencesFirst === null || appearencesFirst === void 0 ? void 0 : appearencesFirst.appearences})` : '',\n          away: appearencesSecond ? `${appearencesSecond === null || appearencesSecond === void 0 ? void 0 : appearencesSecond.player.data.display_name} (${appearencesSecond === null || appearencesSecond === void 0 ? void 0 : appearencesSecond.appearences})` : ''\n        }, {\n          performance: 'Most Mins Played',\n          home: minFirst ? `${minFirst === null || minFirst === void 0 ? void 0 : minFirst.player.data.display_name} (${minFirst === null || minFirst === void 0 ? void 0 : minFirst.minutes})` : '',\n          away: minSecond ? `${minSecond === null || minSecond === void 0 ? void 0 : minSecond.player.data.display_name} (${minSecond === null || minSecond === void 0 ? void 0 : minSecond.minutes})` : ''\n        }, {\n          performance: 'Most Cards',\n          home: cardsFirst ? `${cardsFirst === null || cardsFirst === void 0 ? void 0 : cardsFirst.player.data.display_name} (${cardsFirst === null || cardsFirst === void 0 ? void 0 : cardsFirst.yellowcards})` : '',\n          away: cardsSecond ? `${cardsSecond === null || cardsSecond === void 0 ? void 0 : cardsSecond.player.data.display_name} (${cardsSecond === null || cardsSecond === void 0 ? void 0 : cardsSecond.yellowcards})` : ''\n        }];\n      });\n    }\n\n    navigateToPlayerProfile(playerName) {\n      this.router.navigateByUrl('/', {\n        skipLocationChange: true\n      }).then(() => this.router.navigate(['player', playerName]));\n    }\n\n  }\n\n  TopPlayersComparisonComponent.ɵfac = function TopPlayersComparisonComponent_Factory(t) {\n    return new (t || TopPlayersComparisonComponent)(i0.ɵɵdirectiveInject(i1.H2hService), i0.ɵɵdirectiveInject(i2.LeagueAndSeasonsService), i0.ɵɵdirectiveInject(i3.TeamService), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  TopPlayersComparisonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TopPlayersComparisonComponent,\n    selectors: [[\"app-top-players-comparison\"]],\n    inputs: {\n      firstTeamId: \"firstTeamId\",\n      secondTeamId: \"secondTeamId\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"title\", 3, \"title\", \"hasSelectLeague\", \"hasSelectRange\", \"seasons\", \"leagues\", \"curSeason\", \"curLeague\", \"selectedSeason\", \"selectedLeague\", 4, \"ngIf\"], [\"class\", \"table three-rows  nonepd br20\", 4, \"ngIf\"], [1, \"title\", 3, \"title\", \"hasSelectLeague\", \"hasSelectRange\", \"seasons\", \"leagues\", \"curSeason\", \"curLeague\", \"selectedSeason\", \"selectedLeague\"], [1, \"table\", \"three-rows\", \"nonepd\", \"br20\"], [1, \"w-100\", \"nonebd\", \"br20\"], [1, \"nonebd\"], [4, \"ngFor\", \"ngForOf\"], [1, \"pointer\", \"nonebd\", 3, \"click\"]],\n    template: function TopPlayersComparisonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TopPlayersComparisonComponent_app_header_component_0_Template, 1, 7, \"app-header-component\", 0);\n        i0.ɵɵtemplate(1, TopPlayersComparisonComponent_div_1_Template, 12, 3, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.list);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.list);\n      }\n    },\n    directives: [i5.NgIf, i6.HeaderComponentComponent, i5.NgForOf],\n    styles: [\"tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]{font-weight:500;font-size:16px;line-height:20px;color:#4c535f;border-bottom:1px solid #F1F1F1!important}tbody[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:nth-of-type(even) > td[_ngcontent-%COMP%]{background:#FBFBFB}thead[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]{border-top:1px solid #F1F1F1!important;border-bottom:1px solid #F1F1F1!important}thead[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]{background:#FBFBFB}\"]\n  });\n  return TopPlayersComparisonComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}