{"ast":null,"code":"import { ResultEnum } from \"../../interfaces/fixtures.interface\";\nimport { switchMap, takeUntil } from \"rxjs\";\nimport { FilterDirective } from \"../../directive/filter.directive\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/team.service\";\nimport * as i2 from \"../fixtures-table/fixtures-table.component\";\nexport let FixturesComponent = /*#__PURE__*/(() => {\n  class FixturesComponent extends FilterDirective {\n    constructor(teamService) {\n      super(teamService);\n      this.teamService = teamService;\n      this.fixtures = [];\n    }\n\n    getData() {\n      this.curSeason = new Date().getFullYear();\n      this.subject$.asObservable().pipe(switchMap(() => this.teamService.getFixtures(ResultEnum.FIXTURE, this.teamService.team.id, this.curLeague, this.curSeason, this.page)), takeUntil(this.subscription)).subscribe(res => {\n        if (this.page === 1) {\n          this.fixtures = [];\n        }\n\n        this.lastLength = this.fixtures.length;\n        this.fixtures = this.fixtures.concat(res).sort((a, b) => new Date(b.dateStart).getTime() - new Date(a.dateStart).getTime());\n        this.loaderState = {\n          val: false\n        };\n      }, () => this.loaderState = {\n        val: false\n      });\n    }\n\n    getSeasons() {\n      var _a, _b, _c;\n\n      const l = (_a = this.leagues) === null || _a === void 0 ? void 0 : _a.find(l => l.leagueId === this.curLeague);\n      this.seasons = [];\n\n      if ((_b = l === null || l === void 0 ? void 0 : l.seasons) === null || _b === void 0 ? void 0 : _b.length) {\n        l.seasons.forEach(s => {\n          const years = s.seasonName.split('/');\n          years.forEach(y => {\n            if (!this.seasons.some(season => season.seasonName === y)) {\n              this.seasons.push({\n                seasonId: +y,\n                seasonName: y\n              });\n            }\n          });\n        });\n      }\n\n      if ((_c = this.seasons) === null || _c === void 0 ? void 0 : _c.length) {\n        const currentYear = this.seasons.find(s => s.seasonId === new Date().getFullYear());\n        this.curSeason = currentYear ? currentYear.seasonId : this.seasons[0].seasonId;\n      }\n    }\n\n  }\n\n  FixturesComponent.ɵfac = function FixturesComponent_Factory(t) {\n    return new (t || FixturesComponent)(i0.ɵɵdirectiveInject(i1.TeamService));\n  };\n\n  FixturesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FixturesComponent,\n    selectors: [[\"app-fixtures\"]],\n    inputs: {\n      title: \"title\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 8,\n    consts: [[3, \"title\", \"seasons\", \"leagues\", \"leagueId\", \"seasonId\", \"loaderState\", \"lastLength\", \"fixtures\", \"selectedLeague\", \"selectedSeason\", \"getMore\"]],\n    template: function FixturesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-fixtures-table\", 0);\n        i0.ɵɵlistener(\"selectedLeague\", function FixturesComponent_Template_app_fixtures_table_selectedLeague_0_listener($event) {\n          return ctx.selectLeague($event);\n        })(\"selectedSeason\", function FixturesComponent_Template_app_fixtures_table_selectedSeason_0_listener($event) {\n          return ctx.selectSeason($event);\n        })(\"getMore\", function FixturesComponent_Template_app_fixtures_table_getMore_0_listener() {\n          return ctx.more();\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"title\", ctx.title)(\"seasons\", ctx.seasons)(\"leagues\", ctx.leagues)(\"leagueId\", ctx.curLeague)(\"seasonId\", ctx.curSeason)(\"loaderState\", ctx.loaderState)(\"lastLength\", ctx.lastLength)(\"fixtures\", ctx.fixtures);\n      }\n    },\n    directives: [i2.FixturesTableComponent],\n    styles: [\"app-header-component[_ngcontent-%COMP%]{margin-bottom:14px}@media (max-width: 768px){app-header-component[_ngcontent-%COMP%]{margin-bottom:9px}}.date[_ngcontent-%COMP%]{line-height:1.2}.home-title[_ngcontent-%COMP%]{text-align:right;margin-right:31px}@media (max-width: 768px){.home-title[_ngcontent-%COMP%]{margin-right:4px}}.away-title[_ngcontent-%COMP%]{margin-left:20px}@media (max-width: 768px){.away-title[_ngcontent-%COMP%]{margin-right:4px}}@media (max-width: 768px){.table-grid[_ngcontent-%COMP%]{padding-bottom:4px}}\"]\n  });\n  return FixturesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}