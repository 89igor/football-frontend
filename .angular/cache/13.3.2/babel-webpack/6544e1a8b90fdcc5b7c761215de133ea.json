{"ast":null,"code":"import { UnsubscribeDirective } from './unsubscribe.directive';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/team.service\";\nexport let FilterDirective = /*#__PURE__*/(() => {\n  class FilterDirective extends UnsubscribeDirective {\n    constructor(teamService) {\n      super();\n      this.teamService = teamService;\n      this.seasons = [];\n      this.leagues = [];\n      this.loaderState = {\n        val: false\n      };\n      this.lastLength = 0;\n      this.subject$ = new Subject();\n      this.count = 10;\n      this.offset = 1;\n      this.page = 1;\n    }\n\n    ngOnInit() {\n      var _a, _b, _c, _d;\n\n      this.curLeague = (_a = this.leagueId) !== null && _a !== void 0 ? _a : (_b = this.teamService.team) === null || _b === void 0 ? void 0 : _b.leagueId;\n      this.curSeason = (_c = this.seasonId) !== null && _c !== void 0 ? _c : (_d = this.teamService.team) === null || _d === void 0 ? void 0 : _d.seasonId;\n      this.getLeagues();\n      this.getData();\n      this.callSubject();\n    }\n\n    getData() {}\n\n    getSeasons() {\n      var _a;\n\n      const l = (_a = this.leagues) === null || _a === void 0 ? void 0 : _a.find(l => l.leagueId === this.curLeague);\n\n      if (!this.curSeason) {\n        this.curSeason = l === null || l === void 0 ? void 0 : l.seasons[0].seasonId;\n      }\n\n      this.seasons = (l === null || l === void 0 ? void 0 : l.seasons) || [];\n    }\n\n    selectSeason(id) {\n      this.curSeason = id;\n      this.offset = 1;\n      this.page = 1;\n      this.callSubject();\n    }\n\n    selectLeague(id) {\n      this.curSeason = undefined;\n      this.curLeague = id;\n      this.offset = 1;\n      this.page = 1;\n      this.getSeasons();\n      this.callSubject();\n    }\n\n    more() {\n      this.offset += this.count;\n      this.page += 1;\n      this.callSubject();\n    }\n\n    getLeagues() {\n      this.teamService.leagueSeasons.pipe(takeUntil(this.subscription)).subscribe(res => {\n        this.leagues = res;\n        this.getSeasons();\n      });\n    }\n\n    callSubject() {\n      this.subject$.next();\n    }\n\n  }\n\n  FilterDirective.ɵfac = function FilterDirective_Factory(t) {\n    return new (t || FilterDirective)(i0.ɵɵdirectiveInject(i1.TeamService));\n  };\n\n  FilterDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: FilterDirective,\n    selectors: [[\"\", \"appFilter\", \"\"]],\n    inputs: {\n      seasonId: \"seasonId\",\n      leagueId: \"leagueId\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return FilterDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}